_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 conv2d (Conv2D)             (None, 17, 17, 32)        320       
                                                                 
 max_pooling2d (MaxPooling2  (None, 8, 8, 32)          0         
 D)                                                              
                                                                 
 conv2d_1 (Conv2D)           (None, 6, 6, 64)          18496     
                                                                 
 max_pooling2d_1 (MaxPoolin  (None, 3, 3, 64)          0         
 g2D)                                                            
                                                                 
 flatten (Flatten)           (None, 576)               0         
                                                                 
 dense (Dense)               (None, 128)               73856     
                                                                 
 dense_1 (Dense)             (None, 1)                 129       
                                                                 
=================================================================
Total params: 92801 (362.50 KB)
Trainable params: 92801 (362.50 KB)
Non-trainable params: 0 (0.00 Byte)
_________________________________________________________________
Found 5583 images belonging to 2 classes.
Found 1394 images belonging to 2 classes.
D:\code2018\TrainNetworkAdv.py:169: UserWarning: `Model.fit_generator` is deprecated and will be removed in a future version. Please use `Model.fit`, which supports generators.
  history = model.fit_generator(
Epoch 1/50
86/87 [============================>.] - ETA: 0s - loss: 0.6693 - accuracy: 0.3872
D:\code2018\venv\Lib\site-packages\keras\src\engine\training.py:3000: UserWarning: You are saving your model as an HDF5 file via `model.save()`. This file format is considered legacy. We recommend using instead the native Keras format, e.g. `model.save('my_model.keras')`.
  saving_api.save_model(
Epoch 1: val_accuracy improved from -inf to 0.38021, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 16s 139ms/step - loss: 0.6691 - accuracy: 0.3881 - val_loss: 0.7288 - val_accuracy: 0.3802
Epoch 2/50
86/87 [============================>.] - ETA: 0s - loss: 0.6134 - accuracy: 0.6211
Epoch 2: val_accuracy improved from 0.38021 to 0.62128, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 5s 54ms/step - loss: 0.6127 - accuracy: 0.6228 - val_loss: 0.6782 - val_accuracy: 0.6213
Epoch 3/50
87/87 [==============================] - ETA: 0s - loss: 0.5247 - accuracy: 0.7543
Epoch 3: val_accuracy improved from 0.62128 to 0.66220, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 5s 54ms/step - loss: 0.5247 - accuracy: 0.7543 - val_loss: 0.6699 - val_accuracy: 0.6622
Epoch 4/50
87/87 [==============================] - ETA: 0s - loss: 0.4727 - accuracy: 0.7849
Epoch 4: val_accuracy improved from 0.66220 to 0.72917, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 5s 54ms/step - loss: 0.4727 - accuracy: 0.7849 - val_loss: 0.5734 - val_accuracy: 0.7292
Epoch 5/50
87/87 [==============================] - ETA: 0s - loss: 0.4430 - accuracy: 0.7982
Epoch 5: val_accuracy improved from 0.72917 to 0.74926, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 5s 54ms/step - loss: 0.4430 - accuracy: 0.7982 - val_loss: 0.6191 - val_accuracy: 0.7493
Epoch 6/50
87/87 [==============================] - ETA: 0s - loss: 0.4188 - accuracy: 0.8143
Epoch 6: val_accuracy did not improve from 0.74926
87/87 [==============================] - 5s 53ms/step - loss: 0.4188 - accuracy: 0.8143 - val_loss: 0.6537 - val_accuracy: 0.7195
Epoch 7/50
86/87 [============================>.] - ETA: 0s - loss: 0.4092 - accuracy: 0.8178
Epoch 7: val_accuracy improved from 0.74926 to 0.75521, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 5s 54ms/step - loss: 0.4080 - accuracy: 0.8186 - val_loss: 0.6023 - val_accuracy: 0.7552
Epoch 8/50
86/87 [============================>.] - ETA: 0s - loss: 0.3900 - accuracy: 0.8308
Epoch 8: val_accuracy improved from 0.75521 to 0.76042, saving model to D:\code2018\model2\best_model_weights.h5
87/87 [==============================] - 5s 53ms/step - loss: 0.3891 - accuracy: 0.8309 - val_loss: 0.5962 - val_accuracy: 0.7604
Epoch 9/50
86/87 [============================>.] - ETA: 0s - loss: 0.3792 - accuracy: 0.8334
Epoch 9: val_accuracy did not improve from 0.76042
87/87 [==============================] - 5s 53ms/step - loss: 0.3791 - accuracy: 0.8335 - val_loss: 0.6020 - val_accuracy: 0.7552